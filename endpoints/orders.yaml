openapi: "3.0.0"

components:
 securitySchemes:
    bearerAuth: 
      type: http
      scheme: bearer
      bearerFormat: JWT 
security:
  - bearerAuth: []

info:
  version: 4.0.9
  title: Orders
  description: SGS uses the following _methods_ on the orders resource - __Acknowledge__, __Approve__, __Cancel__, __Confirm__, __Create__, __Enumerate__, __notifyOpen__, __Reject__, and __Revise__. APIs follow the convention established by the TVB 3.2 flow and most of these flows are asynchronous. SGS delivers asynchronous requests to the counterparty-exposed endpoint URLs; then, the counterparty uses the orders subscription API to set the URLs. The payload is opaque to this specification because it is encapsulated within the payloadData property and encoded as XML per the TVB 3.2 standard.
  termsOfService: http://placeholderdomain.io/terms/
  contact:
    name: todo
    email: mailing-list@tbd.com
    url: http://placeholderdomain.io
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://placeholderdomain.io

paths:
  /v1/orders/enumerate:
    post:
      summary: Enumerate Orders
      description: The enumerate POST method requests a collection of orders that match the query parameters previously provided.
      operationId: enumerateOrders
      requestBody:
        description: EnumerateOrders
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/ordersSchemas.yaml#/components/schemas/enumerateOrdersQuery'
      responses:
        '202':
          description: Your request was received. An asynchronous response payload will be delivered to the enumerate counterparty endpoint. Counterparty endpoint URLs use the following endpoint to set URLs - /v1/orders/subscriptions.
          content:
            application/json:
              schema:
                $ref: 'schemas/ordersSchemas.yaml#/components/schemas/enumerateOrdersResponse'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'

  /v1/orders/create:
    post:
      summary: Create an Order
      description: The create POST method creates an order.
      operationId: createOrder
      requestBody:
        description: createOrder
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
      responses:
        '202':
          description: Your request was received. An asynchronous response payload will be delivered to the create counterparty endpoint. Counterparty endpoint URLs use the following endpoint to set URLs - /v1/orders/subscriptions.
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'

  /v1/orders/cancel/{sgsOrderId}:
    put:
      summary: Cancel an Order
      description: The cancel PUT method runs within SGS to cancel an order.
      operationId: cancelOrder
      parameters:
        - name: sgsOrderId
          in: path
          description: The SGS Order ID
          required: true
      requestBody:
        description: cancelOrder
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
      responses:
        '202':
          description: Your request was received. An asynchronous response payload will be delivered to the cancel counterparty endpoint. Counterparty endpoint URLs use the following endpoint to set URLs - /v1/orders/subscriptions.
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'

  /v1/orders/revise/{sgsOrderId}:
    put:
      summary: Revise an Order
      description: The revise PUT method runs within SGS to revise an order.
      operationId: reviseOrder
      parameters:
        - name: sgsOrderId
          in: path
          description: The SGS Order ID
          required: true
      requestBody:
        description: reviseOrder
        required: true
        content:
          application/json:
            schema:
              $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
      responses:
        '202':
          description: Your request was received. An asynchronous response payload will be delivered to the revise counterparty endpoint. Counterparty endpoint URLs use the following endpoint to set URLs - /v1/orders/subscriptions.
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'

  /v1/orders/acknowledge:
      post:
        summary: Acknowledgement of order processing
        description: The acknowledge POST method acknowledges order processing.
        operationId: acknowledgeOrder
        requestBody:
          description: acknowledge 
          required: true
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
        responses:
          '200':
            description: Your request was received. An asynchronous response payload will be delivered to the acknowledge counterparty endpoint. Counterparty endpoint URLs use the following endpoint to set URLs - /v1/orders/subscriptions.
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
          default:
            description: Error.
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'

  /v1/orders/approve/{sgsOrderId}:
      post:
        summary: Receive events from SGS for accepted updates to an order
        description: The approve POST method runs within SGS to receive events for accepted updates to an order.
        operationId: approveOrder
        parameters:
          - name: sgsOrderId
            in: path
            description: The SGS Order ID
            required: true
        requestBody:
          description: reviseOrder
          required: true
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
        responses:
          '202':
            description: Your request was received. An asynchronous response payload will be delivered to the approve counterparty endpoint. Counterparty endpoint URLs use the following endpoint to set URLs - /v1/orders/subscriptions.
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
          default:
            description: Error.
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'

  /v1/orders/confirm/{sgsOrderId}:
      post:
        summary: Confirm an Order
        description: The confirm POST method runs within SGS to confirm an order.
        operationId: confirmOrder
        parameters:
          - name: sgsOrderId
            in: path
            description: The SGS Order ID
            required: true
        requestBody:
          description: reviseOrder
          required: true
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
        responses:
          '202':
            description: Your request was received. An asynchronous response payload will be delivered to the confirm counterparty endpoint. Counterparty endpoint URLs use the following endpoint to set URLs - /v1/orders/subscriptions.
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
          default:
            description: Error.
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'

  /v1/orders/notifyOpen/{sgsOrderId}:
      post:
        summary: Notify on Open Order
        description: The notifyOpen POST method runs within SGS to open an order.
        operationId: notifyOpenOrder
        parameters:
          - name: sgsOrderId
            in: path
            description: The SGS Order ID
            required: true
        requestBody:
          description: reviseOrder
          required: true
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
        responses:
          '202':
            description: Your request was received. An asynchronous response payload will be delivered to the notifyOpen counterparty endpoint. Counterparty endpoint URLs use the following endpoint to set URLs - /v1/orders/subscriptions.
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
          default:
            description: Error.
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'

  /v1/orders/reject/{sgsOrderId}:
      post:
        summary: Receive events from SGS for rejected updates to an order
        description: The reject POST method runs within SGS to receive events for order updates that were rejected.
        operationId: rejectOrder
        parameters:
          - name: sgsOrderId
            in: path
            description: The SGS Order ID
            required: true
        requestBody:
          description: reviseOrder
          required: true
          content:
            application/json:
              schema:
                $ref: 'schemas/commonSchemas.yaml#/components/schemas/encodededPayloadWrapper'
        responses:
          '202':
            description: Your request was received. An asynchronous response payload will be delivered to the reject counterparty endpoint. Counterparty endpoint URLs use the following endpoint to set URLs - /v1/orders/subscriptions.
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/acceptedResponse'
          default:
            description: Error.
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'
          
  /v1/orders/subscriptions:
      post:
          summary: Create a new subscription
          description: The subscriptions POST method creates a new subscription.
          operationId: ordersSubscription
          requestBody:
            description: Create a new subscription
            required: true
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/subscriptionRequest'
          responses:
            '201':
              description: Callback URL set successfully.
              content:
                application/json:
                  schema:
                    $ref: 'schemas/commonSchemas.yaml#/components/schemas/subscriptionResponse'
            default:
              description: Error.
              content:
                application/json:
                  schema:
                    $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'
      get:
        summary: Enumerating subscriptions
        description: The subscriptions GET method gets a list of active subscriptions.
        operationId: Enumerating subscriptions
        responses:
          '200':
            description: Response contains currently configured callback URLs.
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/enumerateSubscriptions'
          default:
            description: Error.
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'

  /v1/orders/subscriptions/{id}:
      delete:
        summary: Remove a subscription
        description: The subscriptions DELETE method issues a delete request against the subscription resource.
        operationId: Remove a subscription
        parameters:
        - name: id
          in: path
          description: The subscription ID
          required: true
        responses:
          '204':
            description: Subscription deleted
          default:
            description: Error.
            content:
              application/json:
                schema:
                  $ref: 'schemas/commonSchemas.yaml#/components/schemas/Error'